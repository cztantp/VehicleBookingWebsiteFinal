@page "/staff/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class="card-title"> Staffs </h3>
<a href="/staff/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Staff
</a>
<br />
<br />

@if (Staff == null)
{
    <div class="alert alert-info">Loading Staffs...</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th> First Name </th>
                <th> Last Name </th>
                <th> Address </th>
                <th> Contact Number </th>
                <th> Date Of Birth </th>
                <th> Driving License </th>
                <th> Actions </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var staff in Staff)
            {
            <tr>
                <td> @staff.FirstName </td>
                <td> @staff.LastName </td>
                <td> @staff.Address </td>
                <td> @staff.Contact </td>
                <td> @staff.DOB </td>
                <td> @staff.DrivingLicenseNumber </td>
                <td>
                    <a href="/staff/view/@staff.Id" class="btn btn-primary">
                        <span class="oi oi-book"></span>
                    </a>
                    <a href="/staff/edit/@staff.Id" class="btn btn-warning">
                        <span class="oi oi-pencil"></span>
                    </a>
                    <button class="btn btn-danger" @onclick="@(()=>Delete(staff.Id))">
                        <span class="oi oi-delete"></span>
                    </button>
                </td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Staff> Staff;

    protected async override Task OnInitializedAsync()
    {
        Staff = await _client.GetFromJsonAsync<List<Staff>>($"{Endpoint.StaffsEndpoint}");
    }

    async Task Delete(int staffId)
    {
        var staff = Staff.First(q => q.Id == staffId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {staff.FirstName}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoint.StaffsEndpoint}/{staffId}");
            await OnInitializedAsync();
        }
    }

}